// Code generated by protoc-gen-go. DO NOT EDIT.
// source: AdvanceTopics/HandlingErrorAndCodes/calculatorpb/calculator.proto

package ErrorHandlingCalculatorpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SquareRootRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRootRequest) Reset()         { *m = SquareRootRequest{} }
func (m *SquareRootRequest) String() string { return proto.CompactTextString(m) }
func (*SquareRootRequest) ProtoMessage()    {}
func (*SquareRootRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6158c38937f7dcc, []int{0}
}

func (m *SquareRootRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRootRequest.Unmarshal(m, b)
}
func (m *SquareRootRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRootRequest.Marshal(b, m, deterministic)
}
func (m *SquareRootRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRootRequest.Merge(m, src)
}
func (m *SquareRootRequest) XXX_Size() int {
	return xxx_messageInfo_SquareRootRequest.Size(m)
}
func (m *SquareRootRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRootRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRootRequest proto.InternalMessageInfo

func (m *SquareRootRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type SquareRootResponse struct {
	NumberRoot           float64  `protobuf:"fixed64,1,opt,name=number_root,json=numberRoot,proto3" json:"number_root,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRootResponse) Reset()         { *m = SquareRootResponse{} }
func (m *SquareRootResponse) String() string { return proto.CompactTextString(m) }
func (*SquareRootResponse) ProtoMessage()    {}
func (*SquareRootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6158c38937f7dcc, []int{1}
}

func (m *SquareRootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRootResponse.Unmarshal(m, b)
}
func (m *SquareRootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRootResponse.Marshal(b, m, deterministic)
}
func (m *SquareRootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRootResponse.Merge(m, src)
}
func (m *SquareRootResponse) XXX_Size() int {
	return xxx_messageInfo_SquareRootResponse.Size(m)
}
func (m *SquareRootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRootResponse proto.InternalMessageInfo

func (m *SquareRootResponse) GetNumberRoot() float64 {
	if m != nil {
		return m.NumberRoot
	}
	return 0
}

func init() {
	proto.RegisterType((*SquareRootRequest)(nil), "ErrorHandlingCalculator.SquareRootRequest")
	proto.RegisterType((*SquareRootResponse)(nil), "ErrorHandlingCalculator.SquareRootResponse")
}

func init() {
	proto.RegisterFile("AdvanceTopics/HandlingErrorAndCodes/calculatorpb/calculator.proto", fileDescriptor_d6158c38937f7dcc)
}

var fileDescriptor_d6158c38937f7dcc = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x72, 0x74, 0x4c, 0x29, 0x4b,
	0xcc, 0x4b, 0x4e, 0x0d, 0xc9, 0x2f, 0xc8, 0x4c, 0x2e, 0xd6, 0xf7, 0x48, 0xcc, 0x4b, 0xc9, 0xc9,
	0xcc, 0x4b, 0x77, 0x2d, 0x2a, 0xca, 0x2f, 0x72, 0xcc, 0x4b, 0x71, 0xce, 0x4f, 0x49, 0x2d, 0xd6,
	0x4f, 0x4e, 0xcc, 0x49, 0x2e, 0xcd, 0x49, 0x2c, 0xc9, 0x2f, 0x2a, 0x48, 0x42, 0xe2, 0xe8, 0x15,
	0x14, 0xe5, 0x97, 0xe4, 0x0b, 0x89, 0x83, 0x15, 0xc3, 0x74, 0x3a, 0xc3, 0xa5, 0x95, 0xb4, 0xb9,
	0x04, 0x83, 0x0b, 0x4b, 0x13, 0x8b, 0x52, 0x83, 0xf2, 0xf3, 0x4b, 0x82, 0x52, 0x0b, 0x4b, 0x53,
	0x8b, 0x4b, 0x84, 0xc4, 0xb8, 0xd8, 0xf2, 0x4a, 0x73, 0x93, 0x52, 0x8b, 0x24, 0x18, 0x15, 0x18,
	0x35, 0x58, 0x83, 0xa0, 0x3c, 0x25, 0x53, 0x2e, 0x21, 0x64, 0xc5, 0xc5, 0x05, 0xf9, 0x79, 0xc5,
	0xa9, 0x42, 0xf2, 0x5c, 0xdc, 0x10, 0xf9, 0xf8, 0xa2, 0xfc, 0xfc, 0x12, 0xb0, 0x16, 0xc6, 0x20,
	0x2e, 0x88, 0x10, 0x48, 0xa1, 0x51, 0x27, 0x23, 0x97, 0x1c, 0x8a, 0xfd, 0x08, 0x43, 0x82, 0x53,
	0x8b, 0xca, 0x32, 0x93, 0x53, 0x85, 0xd2, 0xb9, 0xb8, 0x10, 0x82, 0x42, 0x5a, 0x7a, 0x38, 0x9c,
	0xab, 0x87, 0xe1, 0x56, 0x29, 0x6d, 0xa2, 0xd4, 0x42, 0x9c, 0xaa, 0xc4, 0xe0, 0x24, 0x1d, 0x25,
	0x89, 0x43, 0x7d, 0x41, 0x52, 0x12, 0x1b, 0x38, 0xb0, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xe8, 0xb6, 0x6d, 0x52, 0x71, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ErrorHandlingSquareRootServiceClient is the client API for ErrorHandlingSquareRootService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ErrorHandlingSquareRootServiceClient interface {
	// Error Handling this RPC while throw an exception if the number is -
	// The Error being send is of type INVALID_ARGUMENT
	SquareRoot(ctx context.Context, in *SquareRootRequest, opts ...grpc.CallOption) (*SquareRootResponse, error)
}

type errorHandlingSquareRootServiceClient struct {
	cc *grpc.ClientConn
}

func NewErrorHandlingSquareRootServiceClient(cc *grpc.ClientConn) ErrorHandlingSquareRootServiceClient {
	return &errorHandlingSquareRootServiceClient{cc}
}

func (c *errorHandlingSquareRootServiceClient) SquareRoot(ctx context.Context, in *SquareRootRequest, opts ...grpc.CallOption) (*SquareRootResponse, error) {
	out := new(SquareRootResponse)
	err := c.cc.Invoke(ctx, "/ErrorHandlingCalculator.ErrorHandlingSquareRootService/SquareRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ErrorHandlingSquareRootServiceServer is the server API for ErrorHandlingSquareRootService service.
type ErrorHandlingSquareRootServiceServer interface {
	// Error Handling this RPC while throw an exception if the number is -
	// The Error being send is of type INVALID_ARGUMENT
	SquareRoot(context.Context, *SquareRootRequest) (*SquareRootResponse, error)
}

// UnimplementedErrorHandlingSquareRootServiceServer can be embedded to have forward compatible implementations.
type UnimplementedErrorHandlingSquareRootServiceServer struct {
}

func (*UnimplementedErrorHandlingSquareRootServiceServer) SquareRoot(ctx context.Context, req *SquareRootRequest) (*SquareRootResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SquareRoot not implemented")
}

func RegisterErrorHandlingSquareRootServiceServer(s *grpc.Server, srv ErrorHandlingSquareRootServiceServer) {
	s.RegisterService(&_ErrorHandlingSquareRootService_serviceDesc, srv)
}

func _ErrorHandlingSquareRootService_SquareRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SquareRootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ErrorHandlingSquareRootServiceServer).SquareRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ErrorHandlingCalculator.ErrorHandlingSquareRootService/SquareRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ErrorHandlingSquareRootServiceServer).SquareRoot(ctx, req.(*SquareRootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ErrorHandlingSquareRootService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ErrorHandlingCalculator.ErrorHandlingSquareRootService",
	HandlerType: (*ErrorHandlingSquareRootServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SquareRoot",
			Handler:    _ErrorHandlingSquareRootService_SquareRoot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "AdvanceTopics/HandlingErrorAndCodes/calculatorpb/calculator.proto",
}
